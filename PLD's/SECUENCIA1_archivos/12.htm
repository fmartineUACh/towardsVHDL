<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0047)http://det.bp.ehu.es/vhdl/pagina/express/12.htm -->
<HTML><HEAD><TITLE>Práctica 12: Secuenciador</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="Daniel Jiménez Iglesias          danieljimenez@mailcity.com" 
name=Author>
<META content="Daniel Jiménez Iglesias y Juan Carlos Cárdenas Bonelli" 
name=Author>
<META content="Juan Carlos Cárdenas Bonelli     juanky.cardenas@mailcity.com" 
name=Author>
<META content="MSHTML 5.50.4134.100" name=GENERATOR></HEAD>
<BODY bgProperties=fixed background=12_archivos/fondo00.jpg>
<SCRIPT language=JavaScript><!--
MSFPhover = 
  (((navigator.appName == "Netscape") && 
  (parseInt(navigator.appVersion) >= 3 )) || 
  ((navigator.appName == "Microsoft Internet Explorer") && 
  (parseInt(navigator.appVersion) >= 4 ))); 
function MSFPpreload(img) 
{
  var a=new Image(); a.src=img; return a; 
}
// -->

</SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav1n=MSFPpreload('boto10.jpg'); 
MSFPnav1h=MSFPpreload('boto11.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav2n=MSFPpreload('boto20.jpg'); 
MSFPnav2h=MSFPpreload('boto21.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav3n=MSFPpreload('boto30.jpg'); 
MSFPnav3h=MSFPpreload('boto31.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav4n=MSFPpreload('boto40.jpg'); 
MSFPnav4h=MSFPpreload('boto41.jpg'); }
// --></SCRIPT>

<DIV align=center>
<CENTER>
<TABLE height=515 cellSpacing=5 cellPadding=2 width="86%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=center align=middle width="100%" height=81><A name=0></A><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/11.htm"><IMG height=50 
      alt=Contador src="12_archivos/image07.jpg" width=71 
      border=0></A><SMALL><IMG height=56 alt="Práctica 12: Secuenciador" 
      src="12_archivos/ex12-00.jpg" width=463 
      lowsrc=images/ex12-00.gif></SMALL><IMG height=50 
      alt="Fin de la parte práctica." src="12_archivos/image08.jpg" width=71 
      border=0><BR>&nbsp; </TD></TR>
  <TR>
    <TD vAlign=center align=left width="100%" height=66><FONT face=Verdana 
      size=2>En los circuitos secuenciales, la salida, a diferencia de los 
      combinacionales, se debe tanto a las entradas actuales como a los valores 
      anteriores, de esta forma, las salidas toman distintos niveles lógicos 
      para las mismas entradas de contro.</FONT><FONT face=Verdana><SMALL> 
      Emplearemos el principio de los circuitos secuensiales para implementar un 
      circuito cuyas salidas variaran en función del tiempo</SMALL></FONT></TD></TR>
  <TR>
    <TD vAlign=center align=middle width="100%" height=66><SMALL><FONT 
      face=Verdana>
      <P align=left>Nuestro secuenciador utiliza un contador y un decodificador 
      2/4 previamente definidos como componentes en una librería personalizada, 
      invocada desde el fichero de descripción.&nbsp; </FONT></SMALL></P>
      <P align=left><SMALL><FONT face=Verdana>Elige en la lista una práctica 
      para empezar, sin más que pinchar en el botón adecuado. Para volver pulsa 
      el botón que está al lado del título</FONT></SMALL></P></TD></TR>
  <TR>
    <TD align=middle width="100%" height=245>
      <DIV align=left>
      <TABLE style="FLOAT: left" height=158 cellSpacing=4 cellPadding=2 
      width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=center width="28%" height=35>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#1"><IMG 
            height=29 alt="Entidad 1" src="12_archivos/enti1.jpg" width=200 
            border=0></A></P></TD>
          <TD vAlign=center width="72%" height=35><FONT face=Arial 
            size=3><STRONG>Decodificador 2/4 </STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=35>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#2"><IMG 
            height=29 alt="Arquitectura 1" src="12_archivos/arqui1.jpg" 
            width=200 border=0></A></P></TD>
          <TD vAlign=center width="72%" height=35><FONT face=Arial 
            size=3><STRONG>Decodificador 2/4</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=35>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#3"><IMG 
            height=29 alt="Entidad 2" src="12_archivos/enti2.jpg" width=200 
            border=0></A></P></TD>
          <TD vAlign=center width="72%" height=35><FONT face=Arial 
            size=3><STRONG>Contador </STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=35>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#4"><IMG 
            height=29 alt="Arquitectura 2" src="12_archivos/arqui2.jpg" 
            width=200 border=0></A></P></TD>
          <TD vAlign=center width="72%" height=35><FONT face=Arial 
            size=3><STRONG>Contador</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=35>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#5"><IMG 
            height=29 alt="Entidad 3" src="12_archivos/enti3.jpg" width=200 
            border=0></A></P></TD>
          <TD vAlign=center width="72%" height=35><FONT face=Arial 
            size=3><STRONG>Secuenciador</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=1>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#6"><IMG 
            height=29 alt="Arquitectura 3" src="12_archivos/arqui3.jpg" 
            width=200 border=0></A></P></TD>
          <TD vAlign=center width="72%" height=1><FONT face=Arial 
            size=3><STRONG>Secuenciador</STRONG></FONT></TD></TR></TBODY></TABLE></DIV>
      <P>&nbsp;</P></TD></TR>
  <TR>
    <TD align=middle width="100%" height=7><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm#12"><IMG 
      height=25 alt="Pulsa aquí para simular los ejemplos construidos." 
      src="12_archivos/image03.jpg" width=628 
border=0></A></TD></TR></TBODY></TABLE></CENTER></DIV>
<P align=center>&nbsp;</P>
<P align=left>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=1></A>Entidad 1: Decodificador 2/4</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">El decodificador 2/4 tiene dos señales 
de control, que en nuestra entidad, viene dada por la señal de selección . Como 
salida un vector de longitud cuatro y dos entradas de habilitación 
(enable).</FONT></P>
<P align=center><IMG height=219 alt=Decodificador src="12_archivos/ex12-03.gif" 
width=220 border=1></P>
<P align=left>&nbsp;</P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1<BR>2<BR>3<FONT size=3><IMG 
      height=11 
      alt='Llamada a la librería personalizada "uno", donde guardamos el decodificador como un componente.' 
      src="12_archivos/image02.gif" 
      width=25></FONT><BR>4<BR>5<BR>6<BR>7<BR>8</FONT></TD>
    <TD width="60%"><FONT face="OCR A Extended"><STRONG>library 
      </STRONG>ieee;<BR><STRONG>use 
      </STRONG>ieee.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.uno.<STRONG>all</STRONG>;<BR><STRONG>entity</STRONG> 
      decoder <STRONG>is port</STRONG> (<BR>seleccion:<STRONG>in</STRONG> 
      std_logic_vector(1 <STRONG>downto</STRONG> 0);<BR>enable1,enable2: 
      <STRONG>in</STRONG> bit;<BR>salida: <STRONG>out</STRONG> 
      std_logic_vector(3 <STRONG>downto</STRONG> 0));<BR><STRONG>end</STRONG> 
      decoder;</FONT></TD>
    <TD width="34%"><FONT face="MS Sans Serif">Es necesario poner en la 
      cabecera del código, la llamada a la librería "uno", que es donde 
      guardaremos a este decodificador como un 
componente.</FONT></TD></TR></TBODY></TABLE></CENTER></DIV>
<P align=left>&nbsp;</P>
<P align=left>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=2></A>Arquitectura1: Decodificador</BIG></BIG></FONT><FONT 
      face=Impact size=5> 2/4</FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">El decodificador basa su operatividad 
en dos señales de control "seleccion", con las que seleccionamos la salida que 
queremos que sea activa a nivel alto. Segun sea el valor que tome dicha señal de 
"seleccion", se eligira una salida u otra.</FONT></P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="7%"><FONT face="OCR A Extended">1<BR>2<BR>3<BR>4<BR>5<FONT 
      size=3><IMG height=11 
      alt="Si esta activada el control enable2, toda la señal salida pasa a nivel lógico bajo" 
      src="12_archivos/image02.gif" width=25></FONT><BR>6<FONT size=3><IMG 
      height=11 
      alt="El decodificador será operativo cuando enabl1 este a l lógico y enable2 este a 0 lógico" 
      src="12_archivos/image02.gif" width=25></FONT><BR>7<BR>8<BR>9<FONT 
      size=3><IMG height=11 
      alt="Con este case se especifíca el funcionamiento del decoficador" 
      src="12_archivos/image02.gif" 
      width=25></FONT><BR>10<BR>11<BR>12<BR>13<BR>14<BR>15<BR>16<BR>17<BR>18</FONT></TD>
    <TD width="67%"><FONT face="OCR A Extended"><STRONG>architecture</STRONG> 
      archidecoder <STRONG>of</STRONG> decoder 
      <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR>decodificador:<STRONG>process</STRONG>(seleccion,enable1,enable2)<BR><STRONG>begin</STRONG><BR><STRONG>if</STRONG> 
      enable2='1' <STRONG>then</STRONG> 
      salida&lt;=(<STRONG>others</STRONG>=&gt;'0');<BR><STRONG>elsif</STRONG> 
      enable2='0' <STRONG>and</STRONG> enable1='0' <STRONG>then</STRONG> 
      salida&lt;=(<STRONG>others</STRONG> =&gt; 
      '0');<BR><STRONG>elsif</STRONG>(enable1='1') <STRONG>then</STRONG> 
      <BR><STRONG>case</STRONG> seleccion 
      <STRONG>is</STRONG><BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> "00" =&gt; 
      salida &lt;= "0001";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> "01" 
      =&gt; salida &lt;= "0010";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> 
      "10" =&gt; salida &lt;= "0100";<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>when</STRONG> "11" =&gt; salida &lt;= 
      "1000";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> 
      <STRONG>others</STRONG> =&gt; salida &lt;="1111";<BR><STRONG>end</STRONG> 
      <STRONG>case</STRONG>;<BR><STRONG>en if</STRONG>;<BR><STRONG>end 
      process</STRONG> decodificador;<BR><STRONG>end</STRONG> 
      archidecoder;</FONT></TD>
    <TD width="27%"><FONT face="MS Sans Serif" size=3>El decodificador es 
      activado atravez de sus dos señales de enable. Enable1 va conectada a la 
      señal de reloj, para que el funcionamiento del codificador se sincronice a 
      dicha señal. Enable2, hará las veces de un abilitador 
  normal.</FONT></TD></TR></TBODY></TABLE></CENTER></DIV>
<P align=left><FONT face="MS Sans Serif">El habilitador de entrada de este 
decodificador, enable1 y enable2, le confiere a este diseño la particularidad de 
poder controlar tanto su estado de funcionamiento así como sincronizarlo con la 
entrada de reloj, para que funcione a la vez que el contador al que estará 
unido.</FONT></P>
<P align=left>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="12_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/secuen02.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="12_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P align=left>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=3></A>Entidad 2: </BIG></BIG></FONT><FONT face=Impact 
      size=5>Contador</FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">Este circuito tiene como entradas las 
señales dereloj (clk) y&nbsp; de información (d), siendo activa por flanco de 
subida. Como salida se tiene al puerto q.</FONT></P>
<P align=center><IMG height=168 alt=Contador src="12_archivos/ex12-04.gif" 
width=150 border=1></P>
<P align=left>&nbsp;</P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1<BR>2<BR>3<BR>4<FONT 
      size=3><IMG height=11 
      alt="Llamada a la librería personalizada uno, donde guardamos el contador como un componente." 
      src="12_archivos/image02.gif" 
    width=25></FONT><BR>5<BR>6<BR>7<BR>8</FONT></TD>
    <TD width="67%"><FONT face="OCR A Extended"><STRONG>library</STRONG> 
      ieee;<BR><STRONG>use</STRONG> 
      ieeee.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.std_arith.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.uno.<STRONG>all</STRONG>;<BR><STRONG>entity</STRONG> 
      count <STRONG>is port</STRONG> (<BR>clk,reset:<STRONG>in 
      </STRONG>bit;<BR>conya&nbsp;&nbsp;&nbsp; :<STRONG>buffer</STRONG> 
      std_logic_vector(1 <STRONG>downto</STRONG> 0));<BR><STRONG>end</STRONG> 
      count;</FONT></TD>
    <TD width="27%"></TD></TR></TBODY></TABLE></CENTER></DIV>
<P><FONT face="MS Sans Serif">Esta entidad es muy sencilla ya que las entradas y 
la salida son de un único bit de ancho. La entrada reset, se emplea paea 
habilitar o sesabilitar al reloj.</FONT></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=4></A>Arquitectura 2: Contador</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P><FONT face="MS Sans Serif">Un contador es un circuito secuencial que repite 
su estado cada cierto número de pulsos de reloj. El número de estados por los 
que pasa antes de volver al mismo estado se llama "modulo".</FONT></P>
<P>&nbsp;</P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1<BR>2<BR>3<BR>4<BR>5<BR>6<FONT 
      size=3><IMG height=11 
      alt="Si reset es uno, el contador se inicialisa a cero." 
      src="12_archivos/image02.gif" width=25></FONT><BR>7<BR>8<FONT size=3><IMG 
      height=11 
      alt="Si llega un flanco de subi da conta incrementa su valor en uno" 
      src="12_archivos/image02.gif" width=25></FONT><BR>9<BR>10<BR>11</FONT></TD>
    <TD width="60%"><FONT face="OCR A Extended"><STRONG>architecture</STRONG> 
      archicount <STRONG>of</STRONG> count 
      <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR>contador 
      :<STRONG>process</STRONG> (clk,reset)<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>begin</STRONG><BR>&nbsp;&nbsp;&nbsp; <STRONG>if</STRONG> 
      (reset='1') <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; then conta &lt;= 
      (<STRONG>others</STRONG> =&gt; '0') ;<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; elsif</STRONG> clk'<STRONG>event</STRONG> 
      <STRONG>and</STRONG> clk='1' 
      <BR><STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      then</STRONG> conta &lt;= conta + 1;<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>end</STRONG> <STRONG>if</STRONG>;<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>end</STRONG> <STRONG>process</STRONG> 
      contador;<BR><STRONG>end</STRONG> archicount;</FONT></TD>
    <TD width="34%"></TD></TR></TBODY></TABLE></CENTER></DIV>
<P><FONT face="MS Sans Serif">Estas dos entidades, tanto el contador como el 
decodificador, estarán incluidas dentro de un paquete o <STRONG>Package 
</STRONG>para poder hacer uso de ellos através de la utilización de dichos 
elementos como componentes. Ambos circuitos serán guardados dentro de la 
librería personalizada "uno".A continuación se lista el código de este 
paquete</FONT></P>
<P>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="12_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/secuen03.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="12_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P><FONT face="MS Sans Serif">A continuación se edita el <A 
href="http://det.bp.ehu.es/vhdl/pagina/completo/02.htm#6">paquete</A> (package) 
"uno" donde se guarda como componentes tanto el contador como el decodificador. 
Estos elementos serán posteriormente llamados para formar parte del diseño 
completo del secuenciador que ha sido diseñado dentro de "total".</FONT></P>
<P>&nbsp;</P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1 <BR>2 <BR>3 <BR>4 <BR>5 <FONT 
      size=3><IMG height=11 
      alt="Cabecera donde da inicio la declaración del package" 
      src="12_archivos/image02.gif" width=25></FONT><BR>6 <FONT size=3><IMG 
      height=11 
      alt="La sentencia component especifica que el elemento que viene a continuación forma parte de una librería" 
      src="12_archivos/image02.gif" width=25></FONT><BR>7 <BR>8 <BR>9 
      <BR>10<BR>11<BR>12<BR>13<BR>14<BR>15<BR>16<BR>17<BR>18<BR>19<BR>20<BR>21<BR>22<BR>23<BR>24<BR>25<BR>26<BR>27<BR>28<BR>29<BR>30<BR>31<BR>32<BR>33<BR>34<BR>35<BR>36<BR>37<BR>38<BR>39<BR>40<BR>41<BR>42<BR>43<BR>44<BR>45<BR>46<BR>47<BR>48<BR>49<BR>50<BR>51<BR>52<BR>53<BR>54<BR>55<BR>56<BR>57<BR>58<BR>59<BR>60<BR>61<BR>62<BR>63<BR>64</FONT></TD>
    <TD width="60%"><FONT face="OCR A Extended" 
      size=3><STRONG>library</STRONG> ieee;<BR><STRONG>use</STRONG> 
      ieee.std_logic_1164.all<STRONG>;</STRONG><BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.std_arith.<STRONG>all</STRONG>;<BR>&nbsp;&nbsp; 
      <BR><STRONG>package</STRONG> uno 
      <STRONG>is</STRONG><BR><STRONG>component</STRONG> <BR>count 
      <STRONG>port</STRONG> (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      clk,reset:<STRONG>in</STRONG> 
      bit;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conta&nbsp;&nbsp;&nbsp; 
      :<STRONG>buffer</STRONG> std_logic_vector(1 <STRONG>downto</STRONG> 
      0));<BR>&nbsp;&nbsp;&nbsp; <STRONG>end</STRONG> 
      component;<BR><STRONG>component</STRONG><BR>&nbsp;&nbsp;&nbsp; decoder 
      <STRONG>port</STRONG> (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      seleccion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :<STRONG>in</STRONG> 
      std_logic_vector(1 <STRONG>downto</STRONG> 
      0);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      enable1,enable2:<STRONG>in</STRONG> 
      bit;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; salida 
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      :<STRONG>out</STRONG> std_logic_vector(3 <STRONG>downto</STRONG> 
      0));<BR>&nbsp;&nbsp;&nbsp; <STRONG>end</STRONG> 
      component;<BR><STRONG>end</STRONG> 
      <STRONG>package</STRONG>;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <BR><STRONG>library</STRONG> ieee;<BR><STRONG>use</STRONG> 
      ieee.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      work.std_arith.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      work.uno.<STRONG>all</STRONG>;<BR><STRONG>entity</STRONG> count 
      <STRONG>is</STRONG> <STRONG>port</STRONG> 
      (<BR>clk,reset:<STRONG>in</STRONG> bit;<BR>conta:<STRONG>buffer</STRONG> 
      std_logic_vector(1 <STRONG>downto</STRONG> 0));<BR><STRONG>end</STRONG> 
      count;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR><STRONG>architecture</STRONG> 
      archicount <STRONG>of</STRONG> count 
      <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR>contador 
      :<STRONG>process</STRONG> (clk,reset)<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>begin</STRONG><BR>&nbsp;&nbsp;&nbsp; <STRONG>if</STRONG> 
      (reset='1') <STRONG>then</STRONG> conta &lt;= (others =&gt; '0') 
      ;<BR>&nbsp;&nbsp;&nbsp; <STRONG>elsif</STRONG> clk'<STRONG>event</STRONG> 
      <STRONG>and</STRONG> clk='1' <STRONG>then</STRONG> conta &lt;= conta + 
      1;<BR>&nbsp;&nbsp;&nbsp; <STRONG>end</STRONG> 
      <STRONG>if</STRONG>;<BR>&nbsp;&nbsp;&nbsp; end <STRONG>process</STRONG> 
      contador;<BR><STRONG>end</STRONG> archicount;<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
      <BR>--descripcion del decodificador 3/8 
      (74ls138)<BR><STRONG>library</STRONG> ieee;<BR><STRONG>use</STRONG> 
      ieee.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.uno.<STRONG>all</STRONG>;<BR><STRONG>entity</STRONG> 
      decoder <STRONG>is port</STRONG> 
      (<BR>seleccion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :<STRONG>in</STRONG> 
      std_logic_vector(1 <STRONG>downto</STRONG> 
      0);<BR>enable1,enable2:<STRONG>in</STRONG> 
      bit;<BR>salida&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      :<STRONG>out</STRONG> std_logic_vector(3 <STRONG>downto</STRONG> 
      0));<BR><STRONG>end</STRONG> decoder;<BR>&nbsp;&nbsp;&nbsp; 
      <BR><STRONG>architecture</STRONG> archidecoder <STRONG>of</STRONG> decoder 
      <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR>decodificador:<STRONG>process</STRONG>(seleccion,enable1,enable2)<BR><STRONG>begin</STRONG><BR><STRONG>if</STRONG> 
      enable2='1' <STRONG>then</STRONG> 
      salida&lt;=(<STRONG>others</STRONG>=&gt;'0');<BR><STRONG>elsif</STRONG> 
      enable2='0' <STRONG>and</STRONG> enable1='0' <STRONG>then</STRONG> 
      salida&lt;=(<STRONG>others</STRONG> =&gt; 
      '0');<BR><STRONG>elsif</STRONG>(enable1='1') <STRONG>then</STRONG> 
      <BR><STRONG>case</STRONG> seleccion 
      <STRONG>is</STRONG><BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> "00" =&gt; 
      salida &lt;= "0001";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> "01" 
      =&gt; salida &lt;= "0010";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> 
      "10" =&gt; salida &lt;= "0100";<BR>&nbsp;&nbsp;&nbsp; 
      <STRONG>when</STRONG> "11" =&gt; salida &lt;= 
      "1000";<BR>&nbsp;&nbsp;&nbsp; <STRONG>when</STRONG> 
      <STRONG>others</STRONG> =&gt; salida &lt;="1111";<BR><STRONG>end</STRONG> 
      <STRONG>case</STRONG>;<BR><STRONG>end</STRONG> 
      <STRONG>if</STRONG>;<BR><STRONG>end</STRONG> <STRONG>process</STRONG> 
      decodificador;<BR><STRONG>end</STRONG> 
archidecoder;</FONT></TD></TR></TBODY></TABLE></CENTER></DIV>
<P><FONT face="MS Sans Serif">La especificación de un package consta de dos 
partes claramente diferenciadas, la primera es la cabecera donde se declara como 
<A href="http://det.bp.ehu.es/vhdl/pagina/completo/02.htm#6">componente</A><FONT 
color=#000000> (component), l</FONT>os elementos que van a estar contenidos en 
dicha librería. A continuación aparece la declaración de las entidades y 
arquitecturas&nbsp; de cada uno de los componentes de forma similar a como se 
declara un circuito cualquiera, la única aclaración a tener en cuenta sera que 
habra que incluir necesariamente la sentencia <FONT size=3><STRONG>use</STRONG> 
work.uno.<STRONG>all</STRONG>; donde se especifíca el nombre de la librería en 
la que estamos.</FONT></FONT></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=5></A>Entidad 3: Secuencaidor</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">En esta practica se parte de la gráfica 
siguente. Las especificaciones del diseño nos pide que creemos un circuito que 
se ajuste al comportamiento de la siguente gráfica. </FONT></P>
<P align=center><IMG height=99 alt="Señal de salida" 
src="12_archivos/ex12-01.gif" width=483 border=1></P>
<P align=left>&nbsp;</P>
<P align=left><FONT face="MS Sans Serif">Tras el análisis de los requerimientos, 
se diseña el siguente circuito donde se implementara, previamente, los 
componentes <STRONG>count</STRONG> y <STRONG>deco</STRONG>, que seran guardados 
en el package <STRONG>uno</STRONG>. El circuito <STRONG>total</STRONG> se 
implementara haciendo las llamadas pertinentes a traves de sentencias <FONT 
color=#0000ff><A 
href="http://det.bp.ehu.es/vhdl/pagina/completo/05.htm#1">estructurales</A></FONT> 
<STRONG>port map</STRONG> a dicho package.</FONT></P>
<P align=left>&nbsp;</P>
<P align=center><IMG height=246 alt='Circuito "total"' 
src="12_archivos/ex12-02.gif" width=571 border=1></P>
<P>&nbsp;</P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1 <BR>2 <BR>3</FONT><FONT 
      face="OCR A Extended" size=3><IMG height=11 
      alt='Llamada a la librería "uno" donde hemos creado previamente nuestros componentes.' 
      src="12_archivos/image02.gif" width=25></FONT><FONT 
      face="OCR A Extended"><BR>4 <BR>5 <BR>6 <BR>7 </FONT></TD>
    <TD width="60%"><FONT face="OCR A Extended"><STRONG>library</STRONG> 
      ieee;<BR><STRONG>use</STRONG> 
      ieee.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.uno.<STRONG>all</STRONG>;<BR><STRONG>entity</STRONG> 
      total <STRONG>is</STRONG> 
      <STRONG>port</STRONG>(<BR>clk,reset:<STRONG>in</STRONG> 
      bit;<BR>salida:<STRONG>out</STRONG> std_logic_vector(3 
      <STRONG>downto</STRONG> 0));<BR><STRONG>end</STRONG> total;</FONT></TD>
    <TD width="34%"></TD></TR></TBODY></TABLE></CENTER></DIV>
<P>&nbsp;</P>
<P>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=6></A>Arquitectura 3: Secuenciador</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/12.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="12_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P><FONT face="MS Sans Serif">En esta parte se unen el contador y el 
decodificador antes descrito, para conseguir el comportamiento del secuenciador 
previamente diseñado. Para ello se hace uso de la señal 
<STRONG>intermedio</STRONG>, que nos sirve para pasar las señales propias del 
<STRONG>count</STRONG> y llevarlas a la entrada del 
<STRONG>decoder.</STRONG></FONT></P>
<DIV align=center>
<CENTER>
<TABLE width="100%" bgColor=#ffffff border=0>
  <TBODY>
  <TR>
    <TD width="6%"><FONT face="OCR A Extended">1&nbsp; <BR>2</FONT><FONT 
      face="OCR A Extended" size=3><IMG height=11 
      alt='La señal intermedio sirve para comunicar internamente a "count" y "decoder"' 
      src="12_archivos/image02.gif" width=25></FONT><FONT 
      face="OCR A Extended"><BR>3&nbsp; <BR>4</FONT><FONT face="OCR A Extended" 
      size=3><IMG height=11 
      alt='Llamada al componente "count" localizado en la librería "uno"' 
      src="12_archivos/image02.gif" width=25></FONT><FONT 
      face="OCR A Extended"><BR>5</FONT><FONT face="OCR A Extended" size=3><IMG 
      height=11 
      alt='Llamada al componente "decoder" localizado en la librería "uno"' 
      src="12_archivos/image02.gif" width=25></FONT><FONT 
      face="OCR A Extended"><BR>6 </FONT></TD>
    <TD width="78%"><FONT face="OCR A Extended"><STRONG>architecture</STRONG> 
      architotal <STRONG>of</STRONG> total <STRONG>is</STRONG> 
      <BR><STRONG>signal</STRONG> intermedio:std_logic_vector(1 
      <STRONG>downto</STRONG> 0);<BR><STRONG>begin</STRONG><BR>&nbsp; 
      bloque1:count <STRONG>port</STRONG> 
      <STRONG>map</STRONG>(clk,reset,intermedio);<BR>&nbsp; bloque2:decoder 
      <STRONG>port</STRONG> 
      <STRONG>map</STRONG>(intermedio,clk,reset,salida);<BR><STRONG>end</STRONG> 
      architotal;</FONT></TD></TR></TBODY></TABLE></CENTER></DIV>
<P>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="12_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/secuen01.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="12_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P align=center><IMG height=10 alt="Separa01.gif (636 bytes)" 
src="12_archivos/separa01.gif" width=708></P>
<DL>
  <DD>
  <P align=center>&nbsp;</P></DD></DL>
<P>&nbsp;</P></BODY></HTML>
