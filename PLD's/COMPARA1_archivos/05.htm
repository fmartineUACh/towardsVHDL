<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0047)http://det.bp.ehu.es/vhdl/pagina/express/05.htm -->
<HTML><HEAD><TITLE>Práctica 5: Comparador</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="Daniel Jiménez Iglesias          danieljimenez@mailcity.com" 
name=Author>
<META content="Daniel Jiménez Iglesias y Juan Carlos Cárdenas Bonelli" 
name=Author>
<META content="Juan Carlos Cárdenas Bonelli     juanky.cardenas@mailcity.com" 
name=Author>
<META content="MSHTML 5.50.4134.100" name=GENERATOR></HEAD>
<BODY bgProperties=fixed background=05_archivos/fondo00.jpg>
<SCRIPT language=JavaScript><!--
MSFPhover = 
  (((navigator.appName == "Netscape") && 
  (parseInt(navigator.appVersion) >= 3 )) || 
  ((navigator.appName == "Microsoft Internet Explorer") && 
  (parseInt(navigator.appVersion) >= 4 ))); 
function MSFPpreload(img) 
{
  var a=new Image(); a.src=img; return a; 
}
// -->

</SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav1n=MSFPpreload('boto10.jpg'); 
MSFPnav1h=MSFPpreload('boto11.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav2n=MSFPpreload('boto20.jpg'); 
MSFPnav2h=MSFPpreload('boto21.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav3n=MSFPpreload('boto30.jpg'); 
MSFPnav3h=MSFPpreload('boto31.jpg'); }
// --></SCRIPT>

<SCRIPT language=JavaScript><!--
if(MSFPhover) { MSFPnav4n=MSFPpreload('boto40.jpg'); 
MSFPnav4h=MSFPpreload('boto41.jpg'); }
// --></SCRIPT>

<DIV align=center>
<CENTER>
<TABLE height=589 cellSpacing=5 cellPadding=2 width="90%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=center align=middle width="100%" height=81><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/04.htm"><IMG height=52 
      alt=Decodificador src="05_archivos/image07.jpg" width=74 border=0></A><A 
      name=top></A><SMALL><IMG height=57 alt="Práctica 5: Comparador" 
      src="05_archivos/ex05-00.jpg" width=475 
      lowsrc=images/ex05-00.gif></SMALL><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/06.htm"><IMG height=51 
      alt=Sumador src="05_archivos/image08.jpg" width=72 border=0></A><BR>&nbsp; 
    </TD></TR>
  <TR>
    <TD vAlign=center align=left width="100%" height=66><FONT face=Verdana 
      size=2>Un comparador es un dispositivo lógico que recibe dos números a la 
      entrada, A y B, y a la salida indica si el número A es mayor, menor o 
      igual que el número B. La longitud de las palabras de la entrada es 
      indiferente, pero iguales para ambos números. Pueden llevar además 
      entradas en cascada, usadas para utilizar varios 
comparadores.</FONT></TD></TR>
  <TR>
    <TD vAlign=center align=middle width="100%" height=66><SMALL><FONT 
      face=Verdana>
      <P align=left>Los comparadores van desde el más sencillo hasta el más 
      complejo posible. Se puede ver claramente en este ejemplo, las 
      mejoras&nbsp; de VHDL frente a los MSI.</FONT></SMALL></P>
      <P align=left><SMALL><FONT face=Verdana>Elige en la lista una práctica 
      para empezar, sin más que pinchar en el botón adecuado. Para volver pulsa 
      el botón que está al lado del título</FONT></SMALL></P></TD></TR>
  <TR>
    <TD align=middle width="100%" height=245>
      <TABLE height=166 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=center width="28%" height=41>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#1"><IMG 
            height=29 alt="Entidad 1" src="05_archivos/enti1.jpg" width=200 
            border=0></A></P></TD>
          <TD vAlign=center width="72%" height=41><FONT face=Arial 
            size=3><STRONG>Comparador de dos bits</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=41>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#2"><IMG 
            height=29 alt="Arquitectura 1" src="05_archivos/arqui1.jpg" 
            width=200 border=0></A></P></TD>
          <TD vAlign=center width="72%" height=41><FONT face=Arial 
            size=3><STRONG>Comparador de dos bits</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=42>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#3"><IMG 
            height=29 alt="Entidad 2" src="05_archivos/enti2.jpg" width=200 
            border=0></A></P></TD>
          <TD vAlign=center width="72%" height=42><FONT face=Arial 
            size=3><STRONG>Comparador de cuatro bits con entrada en 
            cascada</STRONG></FONT></TD></TR>
        <TR>
          <TD vAlign=center width="28%" height=42>
            <P><A href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#4"><IMG 
            height=29 alt="Arquitectura 2" src="05_archivos/arqui2.jpg" 
            width=200 border=0></A></P></TD>
          <TD vAlign=center width="72%" height=42><FONT face=Arial 
            size=3><STRONG>Comparador de cuatro bits con entrada en 
            cascada</STRONG></FONT></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD align=middle width="100%" height=50><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm#05"><IMG 
      height=22 alt="Pulsa aquí para simular los ejemplos construidos." 
      src="05_archivos/image03.jpg" width=580 lowsrc=image03.gif 
  border=0></A></TD></TR></TBODY></TABLE></CENTER></DIV>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=1></A>Entidad 1: Comparador de dos bits</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="05_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif" size=3>Este comparador de dos bits es 
realmente uno de los más sencillos de crear, ya que sólo necesitamos dos 
entradas para los dos números (de dos bits cada uno) y tres salidas, que se 
activarán según el resultado de la activación. Como ya dijimos en la <A 
href="http://det.bp.ehu.es/vhdl/pagina/express/03.htm">práctica del 
codificado</A>r, usaremos el tipo <STRONG>std_logic_vector</STRONG>, que es el 
más usado y el que más juego nos da.</FONT></P>
<TABLE cellSpacing=0 width="100%" bgColor=#ffcccc border=0>
  <TBODY>
  <TR>
    <TD vAlign=center width="55%" bgColor=#ffffff><FONT 
      face="OCR A Extended"><STRONG>library</STRONG> 
      <STRONG>ieee</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>ieee</STRONG>.std_logic_1164.<STRONG>all</STRONG>;<BR><B>entity 
      </B>compara<B> is port(</B><BR>a,b: <STRONG>in std_logic_vector(1 downto 
      0);</STRONG><BR>mayor:<B> </B><STRONG>out 
      std_logic;</STRONG><B><BR></B>menor:<B> </B><STRONG>out 
      std_logic;</STRONG><BR>igual:<B> </B><STRONG>out 
      std_logic</STRONG><B><BR></B><STRONG>);<BR>end</STRONG> compara;</FONT></TD>
    <TD vAlign=center width="45%" bgColor=#ffffff><FONT 
      face="MS Sans Serif">Necesitamos dos entradas de dos bits 
      (<STRONG>a</STRONG> y <STRONG>b</STRONG>) y tres salidas de un bit cada 
      uno (<STRONG>mayor</STRONG>, <STRONG>menor</STRONG> e 
      <STRONG>igual</STRONG>).</FONT></TD></TR></TBODY></TABLE>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact><SMALL><A name=2></A></SMALL><FONT 
      size=5>Arquitectura 1: </FONT></FONT><FONT face=Impact 
      color=#000000><BIG><BIG>Comparador de dos bits</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="05_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif" size=3>Para hacer la comparación de dos 
números con VHDL podemos usar varias formas o métodos. A continuación 
describimos algunos de ellas.</FONT></P>
<P align=left><FONT face="MS Sans Serif" size=3>Este primer método es un ejemplo 
de qué <U>no debemos hacer</U>, no porque esté incorrecto, sino porque no 
aprovecha la potencia de VHDL, es complicado de entender y seguir,&nbsp;y por 
ser un programa demasiado largo para solamente indicar si el número 
<STRONG>a</STRONG> es mayor, menor o igual que el <STRONG>b</STRONG>.</FONT></P>
<TABLE cellSpacing=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top width=60 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><B>1</B><BR><B>2</B><BR><B>3</B><BR><B>4</B><BR><B>5</B> <IMG 
      height=11 
      alt="Si los dos bits coinciden entonces &quot;igual&quot; vale '1' y las demás salidas valen '0'." 
      src="05_archivos/image02.gif" 
      width=25><BR><B>6</B><BR><B>7</B><BR><B>8</B> <IMG height=11 
      alt="Si no se cumple lo anterior y si el primer bit de a es '1' y el de b es '0', entonces mayor vale '1' y las demás salidas valen '0'." 
      src="05_archivos/image02.gif" 
      width=25><BR><B>9</B><BR><B>10</B><BR><B>11</B><IMG height=11 
      alt="Si no se cumple lo anterior y si el primer bit de b es '1' y el de a es '0', entonces menor vale '1' y las demás salidas valen '0'." 
      src="05_archivos/image02.gif" 
      width=25><BR><B>12</B><BR><B>13<BR>14</B><IMG height=11 
      alt="Si no se cumple lo anterior y si el segundo bit de a es '1' y el de b es '0', entonces mayor vale '1' y las demás salidas valen '0'." 
      src="05_archivos/image02.gif" width=25><B><BR>15<BR>16<BR>17</B><IMG 
      height=11 
      alt="Si no se cumple lo anterior y si el segundo bit de b es '1' y el de a es '0', entonces menor vale '1' y las demás salidas valen '0'." 
      src="05_archivos/image02.gif" 
      width=25><B><BR>18<BR>19<BR>20<BR>21<BR>22</B></FONT></TD>
    <TD vAlign=top width=699 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><STRONG>architecture</STRONG> archicompara <STRONG>of</STRONG> 
      compara <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR><STRONG>process 
      (</STRONG>a,b<STRONG>)<BR></STRONG>begin<BR><STRONG>if</STRONG> (a(1) = 
      b(1)) <STRONG>and</STRONG> (a(0) = b(0)) <STRONG>then</STRONG> mayor &lt;= 
      '0';<BR><STRONG>&nbsp; </STRONG>&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; menor &lt;= '0';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; igual &lt;= '1';<BR><STRONG>elsif</STRONG> (a(1) = 
      '1') <STRONG>and</STRONG> (b(1) = '0') <STRONG>then</STRONG> mayor &lt;= 
      '1';<BR><STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; menor &lt;= '0';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; igual &lt;= '0';<BR><STRONG>elsif</STRONG> (a(1) = 
      '0') <STRONG>and</STRONG> (b(1) = '1') <STRONG>then</STRONG> mayor &lt;= 
      '0';<BR><STRONG>&nbsp; </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; menor &lt;= '1';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; igual &lt;= '0';<BR><STRONG>elsif</STRONG> (a(0) = 
      '1') <STRONG>and</STRONG> (b(0) = '0') <STRONG>then</STRONG> mayor &lt;= 
      '1';<BR><STRONG>&nbsp; </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; 
      <STRONG>&nbsp;</STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; menor &lt;= '0';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 
      &nbsp;&nbsp; <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; igual &lt;= '0';<BR><STRONG>elsif</STRONG> (a(0) = 
      '0') <STRONG>and</STRONG> (b(0) = '1') <STRONG>then</STRONG> mayor &lt;= 
      '0';<BR><STRONG>&nbsp; </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; menor &lt;= '1';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp; </STRONG>&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp; igual &lt;= '0';<BR>end 
      <STRONG>if</STRONG>;<BR><STRONG>end</STRONG> process;<STRONG><BR>end 
      </STRONG>archicompara<STRONG>;</STRONG></FONT></TD></TR></TBODY></TABLE>
<P align=left>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="05_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/compar01.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="05_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">El siguiente diseño ya es mucho más 
aceptable y utiliza toda la potencia de VHDL para dar un resultado preciso. Para 
esto utiliza la librería <STRONG>ieee</STRONG> (que la utilizaremos siempre que 
haya que usar una función especial), la cual contiene al <A 
href="http://det.bp.ehu.es/vhdl/pagina/completo/02.htm#6">paquete</A> 
<STRONG>std_arith</STRONG> que nos permite hacer operaciones tales como 
comparaciones o sumas, restas, ... Ya que hay que cargar este paquete, 
escribiremos de nuevo la entidad con la llamada al mismo.</FONT></P>
<TABLE cellSpacing=0 width="100%" bgColor=#ffcccc border=0>
  <TBODY>
  <TR>
    <TD vAlign=center width="55%" bgColor=#ffffff><FONT 
      face="OCR A Extended"><STRONG>library</STRONG> 
      <STRONG>ieee</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>ieee</STRONG>.std_logic_1164.<STRONG>all</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>work</STRONG>.std_arith.<STRONG>all</STRONG>;<BR><B>entity 
      </B>compara<B> is port(</B><BR>a,b: <STRONG>in std_logic_vector(1 downto 
      0);</STRONG><BR>mayor:<B> </B><STRONG>out 
      std_logic;</STRONG><B><BR></B>menor:<B> </B><STRONG>out 
      std_logic;</STRONG><BR>igual:<B> </B><STRONG>out 
      std_logic</STRONG><B><BR></B><STRONG>);<BR>end</STRONG> 
  compara;</FONT></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">Y esta sería la arquitectura 
correspondiente:</FONT></P>
<TABLE cellSpacing=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top width=54 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><B>1</B><BR><B>2</B><BR><B>3</B><BR><B>4</B><BR><B>5</B> <IMG 
      height=11 
      alt="Si a es mayor que b, entonces mayor vale '1' y el resto vale '0'. Esto se puede hacer por haber cargado el paquete std_arith" 
      src="05_archivos/image02.gif" 
      width=25><BR><B>6</B><BR><B>7</B><BR><B>8</B> <IMG height=11 
      alt="Si a es menor que b, entonces menor vale '1' y el resto vale '0'. Esto se puede hacer por haber cargado el paquete std_arith" 
      src="05_archivos/image02.gif" 
      width=25><BR><B>9</B><BR><B>10</B><BR><B>11</B><IMG height=11 
      alt="Si a es igual a b, entonces igual vale '1' y el resto vale '0'. Esto se puede hacer por haber cargado el paquete std_arith" 
      src="05_archivos/image02.gif" 
      width=25><BR><B>12</B><BR><B>13<BR>14<BR>15<BR>16</B></FONT></TD>
    <TD vAlign=top width=414 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><STRONG>architecture</STRONG> archicompara <STRONG>of</STRONG> 
      compara <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR><STRONG>process 
      (</STRONG>a,b<STRONG>)<BR></STRONG>begin<BR><STRONG>if</STRONG> a &gt; b 
      <STRONG>then</STRONG> mayor &lt;= '1';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp; </STRONG>menor &lt;= '0';<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp; </STRONG>igual &lt;= 
      '0';<BR><STRONG>elsif</STRONG> a &lt; b <STRONG>then</STRONG> mayor &lt;= 
      '0';<BR><STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>menor &lt;= 
      '1';<BR><STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>igual &lt;= 
      '0';<BR><STRONG>elsif</STRONG> a = b <STRONG>then </STRONG>mayor &lt;= 
      '0';<BR><STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>menor &lt;= 
      '0';<BR><STRONG>&nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>igual &lt;= '1';<BR>end 
      <STRONG>if</STRONG>;<BR><STRONG>end</STRONG> process;<STRONG><BR>end 
      </STRONG>archicompara<STRONG>;</STRONG></FONT></TD></TR></TBODY></TABLE>
<P><FONT face="MS Sans Serif">Esta estrucuta es mucho más sencilla de crear y de 
comprender en un posterior análisis por una persona distinta a la que escribió 
el código.</FONT></P>
<P>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="05_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/compar02.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="05_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact color=#000000><BIG><BIG><A 
      name=3></A>Entidad 2: Comparador de cuatro bits con entrada en 
      cascada</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="05_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif" size=3>Este comparador de cuatro bits 
se corresponde con el 74LS85 de la familia TTL, ya que cuenta con entrada en 
cascada, que se usa para comparar números de más de cuatro bits. Esto está 
anticuado con VHDL ya que cambiando cuatro parámetros en el programa, un 
comparador de cuatro se convierte en un comparador de ocho o de 16 bits. 
Necesitamos dos entradas para los números de cuatro bits cada una y tres para la 
cascada de entrada, y tres de salida para la cascada de salida. Usaremos otra 
vez el paquete <STRONG>std_arith</STRONG> por lo que la declararemos 
adecuadamente en la entidad.</FONT></P>
<TABLE cellSpacing=0 width="100%" bgColor=#ffcccc border=0>
  <TBODY>
  <TR>
    <TD vAlign=center width="55%" bgColor=#ffffff><FONT 
      face="OCR A Extended"><STRONG>library</STRONG> 
      <STRONG>ieee</STRONG>;<BR><STRONG>use</STRONG> 
      <STRONG>ieee</STRONG>.std_logic_1164.<STRONG>all</STRONG>;<BR><B>entity 
      </B>compara<B> is port(</B><BR>a,b: <STRONG>in std_logic_vector(1 downto 
      0);</STRONG><BR>antes_mayor:<B> </B><STRONG>in 
      std_logic;</STRONG><B><BR></B>antes_menor:<B> </B><STRONG>in 
      std_logic;</STRONG><BR>antes_igual:<B> </B><STRONG>in 
      std_logic</STRONG><BR>mayor:<B> </B><STRONG>out 
      std_logic;</STRONG><B><BR></B>menor:<B> </B><STRONG>out 
      std_logic;</STRONG><BR>igual:<B> </B><STRONG>out 
      std_logic</STRONG><B><BR></B><STRONG>);<BR>end</STRONG> compara;</FONT></TD>
    <TD vAlign=center width="45%" bgColor=#ffffff><FONT 
      face="MS Sans Serif">Necesitamos dos entradas de cuatro bits 
      (<STRONG>a</STRONG> y <STRONG>b</STRONG>), tres entradas de un bit para la 
      entrada en cascada (<STRONG>antes_mayor</STRONG>, 
      <STRONG>antes_menor</STRONG> y <STRONG>antes_igual</STRONG>) y tres 
      salidas de un bit cada uno (<STRONG>mayor</STRONG>, <STRONG>menor</STRONG> 
      e <STRONG>igual</STRONG>).</FONT></TD></TR></TBODY></TABLE>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<P align=center>&nbsp;</P>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="85%"><FONT face=Impact><A name=4></A><FONT size=5>Arquitectura 
      1: </FONT></FONT><FONT face=Impact color=#000000><BIG><BIG>Comparador de 
      cuatro bits con entrada en cascada</BIG></BIG></FONT></TD>
    <TD width="7%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/05.htm#top"><IMG height=42 
      alt="Ir al principio de esta página" src="05_archivos/image01.gif" 
      width=59 align=right border=0></A></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif" size=3>Ahora para realizar esta 
arquitectura tendremos que tener en cuenta que debemos dar prioridad a la 
entrada en cascada, ya que proviene siempre de un módulo que compara bits de 
mayor peso, por lo que sólo deberemos comparar realmente cuando la entrada en 
cascada <STRONG>antes_igual</STRONG> esté activada.</FONT></P>
<TABLE cellSpacing=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top width=53 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><B>1</B><BR><B>2</B><BR><B>3</B><BR><B>4</B><BR><B>5</B> <IMG 
      height=11 
      alt="Si el comaprador anterior nos dice que ya ha decidido y que el número no es igual, entonces, las salidas de cascada se corresponden con las entradas en cascada." 
      src="05_archivos/image02.gif" 
      width=25><BR><B>6</B><BR><B>7</B><BR><B>8</B> <IMG height=11 
      alt="Si el bloque anterior nos dice que es igual, entonces comparamos los números igual que en el ejemplo anterior." 
      src="05_archivos/image02.gif" width=25><BR><B>9</B> <IMG height=11 
      alt="Este if lleva anidado otro if" src="05_archivos/image02.gif" 
      width=25><BR><B>10</B><BR><B>11</B><BR><B>12</B><BR><B>13<BR>14<BR>15<BR>16<BR>17<BR>18</B><IMG 
      height=11 alt="Cerramos primero el último if abierto" 
      src="05_archivos/image02.gif" width=25><B><BR>19</B><IMG height=11 
      alt="Después cerramos el primer if abierto" src="05_archivos/image02.gif" 
      width=25><B><BR>20<BR>21</B></FONT></TD>
    <TD vAlign=top width=706 bgColor=#ffffff><FONT face="OCR A Extended" 
      size=3><STRONG>architecture</STRONG> archicompara <STRONG>of</STRONG> 
      compara <STRONG>is</STRONG><BR><STRONG>begin</STRONG><BR><STRONG>process 
      (</STRONG>a,b,antes_igual,antes_mayor,antes_menor<STRONG>)<BR></STRONG>begin<BR><STRONG>if</STRONG> 
      antes_igual = '0' <STRONG>then</STRONG> igual &lt;= 
      antes_igual;<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>mayor &lt;= 
      antes_mayor;<BR><STRONG>&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp; &nbsp; </STRONG>menor &lt;= 
      antes_menor;<BR><STRONG>elsif</STRONG> antes_igual = '1' 
      <STRONG>then</STRONG><BR><STRONG>&nbsp; if</STRONG> a &gt; b 
      <STRONG>then</STRONG> mayor &lt;= '1';<BR><STRONG>&nbsp; </STRONG>&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp;&nbsp;&nbsp; 
      </STRONG>menor &lt;= '0';<BR><STRONG>&nbsp; </STRONG>&nbsp; 
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <STRONG>&nbsp;&nbsp;&nbsp; 
      </STRONG>igual &lt;= '0';<BR><STRONG>&nbsp; elsif</STRONG> a &lt; b 
      <STRONG>then</STRONG> mayor &lt;= '0';<BR><STRONG>&nbsp;&nbsp;&nbsp; 
      &nbsp;&nbsp; </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>menor &lt;= 
      '1';<BR><STRONG>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>igual &lt;= 
      '0';<BR><STRONG>&nbsp; elsif</STRONG> a = b <STRONG>then </STRONG>mayor 
      &lt;= '0';<BR><STRONG>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>menor &lt;= 
      '0';<BR><STRONG>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 
      </STRONG>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      <STRONG>&nbsp;&nbsp;&nbsp;&nbsp; </STRONG>igual &lt;= '1';<BR>&nbsp; end 
      <STRONG>if</STRONG>;<BR>end <STRONG>if</STRONG>;<BR><STRONG>end</STRONG> 
      process;<STRONG><BR>end 
  </STRONG>archicompara<STRONG>;</STRONG></FONT></TD></TR></TBODY></TABLE>
<P align=left><FONT face="MS Sans Serif">En esta ocasión hemos usado parte del 
código del ejemplo anterior para comparar cuatro bits en cascada. Esta es otra 
de las ventajas de VHDL; su modularidad permite el usar otras aplicaciones ya 
creadas.</FONT></P>
<P align=left>&nbsp;</P>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="25%"></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/simula.htm"><IMG height=28 
      alt="Qué debes saber antes de simular" src="05_archivos/image09.jpg" 
      width=211 lowsrc=image09.gif border=0></A></TD>
    <TD width="25%"><A 
      href="http://det.bp.ehu.es/vhdl/pagina/express/practica/compar03.vhd"><IMG 
      height=28 alt="Pulsa aquí para ver el código fuente" 
      src="05_archivos/image10.jpg" width=211 lowsrc=image10.gif 
border=0></A></TD>
    <TD width="25%"></TD></TR></TBODY></TABLE>
<P align=left>&nbsp;</P>
<DL>
  <DD>
  <P align=center><IMG height=10 alt="Separa01.gif (636 bytes)" 
  src="05_archivos/separa01.gif" width=708></P>
  <P align=center>&nbsp;</P></DD></DL></BODY></HTML>
